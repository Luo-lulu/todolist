{"version":3,"sources":["components/TodoForm.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleInputChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","TodoItem","todos","doneTodo","removeTodo","editTodo","setEdit","map","todo","index","isDone","onClick","TodoList","JSON","parse","localStorage","getItem","setTodos","setItem","stringify","test","newTodos","updatedTodos","removeArray","filter","todoId","newValue","prev","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d42ce60d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./project.css\";\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo__from\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            className=\"todo__edit\"\n            type=\"text\"\n            placeholder=\"Edit Todo\"\n            value={input}\n            name=\"text\"\n            onChange={handleInputChange}\n            ref={inputRef}\n          />\n          <button className=\"todo__edit__button\">Edit</button>\n        </>\n      ) : (\n        <>\n          <input\n            className=\"todo__input\"\n            type=\"text\"\n            placeholder=\"Add Todo\"\n            value={input}\n            name=\"text\"\n            onChange={handleInputChange}\n            ref={inputRef}\n          />\n          <button className=\"todo__button\">Add</button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport { BiEditAlt } from \"react-icons/bi\";\nimport \"./project.css\";\nfunction TodoItem({ todos, doneTodo, removeTodo, editTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n\n  const submitEdit = value => {\n    editTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\"\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitEdit} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div className={todo.isDone ? \"todo isdone\" : \"todo\"} key={index}>\n      <div onClick={() => doneTodo(todo.id)} key={todo.id}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiDeleteBin6Line\n          onClick={() => {\n            removeTodo(todo.id);\n          }}\n          className=\"delete__icon\"\n        />\n        <BiEditAlt\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit__icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default TodoItem;\n","import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoItem from \"./TodoItem\";\nimport \"./project.css\";\nfunction TodoList() {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"TODOLOCAK\")) || []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"TODOLOCAK\", JSON.stringify(todos));\n  }, [todos]);\n  // console.log(JSON.parse(localStorage.getItem(\"TODOLOCAK\")));\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n  };\n\n  const editTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArray);\n  };\n\n  const doneTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isDone = !todo.isDone;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div className=\"todolist\">\n      <h1>What's gonna do ?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <TodoItem\n        todos={todos}\n        doneTodo={doneTodo}\n        removeTodo={removeTodo}\n        editTodo={editTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}